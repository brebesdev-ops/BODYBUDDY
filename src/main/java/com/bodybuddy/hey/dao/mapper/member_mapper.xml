<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 1.parameterType은 생략이 가능하다(권장하지 않음) 2.parameterType에 1개의 Type만 올 수 있다. 
	3.parameterType에 bean인 경유 #{필드명} 4.parameterType에 변수인 경유 #{변수명} (변수가 1개인 
	경우) 5.parameterType에 Map<key, value>타입인 경유 #{key}로 쓴다. 6.#{} : 문자열인 경우 '' 
	추가됨 7.${} : ''(따옴표)없이 그대로 입력됨 8.resultType도 1개만 올 수 있는데 1개 이상의 레코드를 검색하는 
	경우도 bean타입만 명시하면 된다. -->
<mapper namespace="com.bodybuddy.hey.dao.MemberDao">
	<!-- 빈 필드명과 컬럼명이 다르거나 타입이 호환되지 않을 때 -->
	<!-- <resultMap type="memeber(Alias 타입)" id="member(resultMap의 이름)"> <result 
		property="mid(빈 변수명)" column="M_ID(테이블 컬럼명)" javaType="String" jdbcType="NVARCHAR2" 
		/> javaType="String" jdbcType="NVARCHAR2" 명시 하지 않아도 자동 호환 </resultMap> -->

	<insert id="normalMemberJoin" parameterType="member">
		INSERT INTO M
		VALUES(#{m_id},#{m_pw},#{m_name},#{m_phone},#{m_birth},#{m_addr},#{m_exaddr},#{m_kind})
	</insert>
	<insert id="trainerMemberJoin" parameterType="member">
		INSERT INTO T VALUES(#{m_id},#{t_cid},#{t_career})
	</insert>
	<insert id="companyMemberJoin" parameterType="member">
		INSERT INTO C
		VALUES(#{m_id},#{c_num},#{c_bname},#{c_bphone})
	</insert>

	<select id="checkId" parameterType="String" resultType="Integer">
		SELECT
		COUNT(*) FROM M
		WHERE M_ID = #{m_id}
	</select>
	<select id="checkCompanyNum" parameterType="String"
		resultType="Integer">
		SELECT COUNT(*) FROM C
		WHERE C_NUM = #{c_num}
	</select>
	<select id="forgetId" parameterType="member" resultType="member">
		SELECT
		M_ID FROM M
		WHERE M_NAME = #{m_name} AND M_PHONE = #{m_phone} AND
		M_BIRTH = #{m_birth}
	</select>
	<select id="forgetPw" parameterType="member" resultType="member">
		SELECT
		M_ID FROM M
		WHERE M_ID = #{m_id} AND M_NAME = #{m_name} AND M_PHONE =
		#{m_phone} AND
		M_BIRTH = #{m_birth}
	</select>
	<update id="memberDeleteReal" parameterType="String">
		UPDATE M SET M_PW =
		'탈퇴회원',M_NAME = '탈퇴회원',M_PHONE = '탈퇴회원',M_BIRTH = SYSDATE,M_ADDR =
		'탈퇴회원',M_EXADDR = '탈퇴회원'
		WHERE M_ID = #{m_id}
	</update>

	<update id="temporaryPw" parameterType="String">
		UPDATE M SET M_PW =
		#{m_pw} WHERE M_ID = #{m_id}
	</update>

	<select id="getMemberList" resultType="member">
		<![CDATA[
			select m_id,m_name,m_phone,TO_CHAR(ps_date, 'YYYY.MM.DD') as ps_date,TO_CHAR(ps_date+30, 'YYYY.MM.DD') as ps_date1, trunc (ps_date+30-sysdate) as ps_date2 from ps left join m on ps_mid = m_id  where ps.ps_opcode is null and m_id in( select ps.ps_mid 
from ad,ps where  ad_code = ps_adcode and ad_name = 'company1' group by ps.ps_mid)
		]]>
	</select>

	<select id="getMemberSearch" parameterType="member"
		resultType="member">
		<![CDATA[
			SELECT M_NAME,M_PHONE FROM
			M WHERE M_NAME = #{m_name} AND M_ID IN(SELECT DISTINCT PS.PS_MID FROM PS,AD WHERE PS_ADCODE =
			AD.AD_CODE AND AD.AD_NAME = #{m_id})
		]]>
	</select>

	<select id="getTrainerList" resultType="member">
		<![CDATA[
			SELECT M_NAME,M_PHONE FROM M WHERE M_ID IN(SELECT T_ID FROM T WHERE T_CID = #{id})
		]]>
	</select>

	<select id="getTrainerSearch" parameterType="member"
		resultType="member">
		<![CDATA[
			SELECT M_NAME,M_PHONE FROM M WHERE M_NAME = #{m_name} AND M_ID IN(SELECT T_ID FROM T WHERE T_CID = #{m_id})
		]]>
	</select>
	<select id="getNormalMemberList" resultType="member">
		<![CDATA[
			select m_id,m_name,m_phone,TO_CHAR(ps_date, 'YYYY.MM.DD') as ps_date,TO_CHAR(ps_date+30, 'YYYY.MM.DD') as ps_date1, trunc (ps_date+30-sysdate) as ps_date2 from ps left join m on ps_mid = m_id  where ps.ps_opcode is null and m_id in( select ps.ps_mid 
			from ad,ps where  ad_code = ps_adcode and ad_name = #{id} group by ps.ps_mid)
		]]>
	</select>
	<select id="getProgramMemberList" resultType="member">
		select
		op_code,op_adcode,op_trainer,m_name,op_period,ad_title from m left
		join op on
		m_id=op_trainer left join ad on ad_code = op_adcode where
		ad_name =
		#{id}

	</select>
	<select id="getTrainerMemberList" resultType="member">
		SELECT
		M_NAME,M_PHONE,M_ID FROM M WHERE M_ID IN(SELECT T_ID FROM T WHERE
		T_CID = #{id})
	</select>

	<insert id="dailyCheckInsert" parameterType="member">
		INSERT INTO
		DAILYCHECKT
		VALUES(#{dt_tid},#{dt_cid},TO_CHAR(sysdate,'YYYYMMDD'),#{dt_status})
	</insert>

	<update id="dailyCheckUpdate" parameterType="member">
		update dailycheckt
		set dt_status = #{dt_status} where dt_tid = #{dt_tid} and dt_cid =
		#{dt_cid}
		and dt_date = to_char(sysdate,'YYYYMMDD')
	</update>

	<select id="getworkingAttitude" parameterType="member"
		resultType="member">
		select TO_CHAR(dt_date, 'YYYY"년"MM"월"DD"일"') as dt_date,
		dt_status,dt_tid from dailycheckt where dt_cid = #{dt_cid} and dt_tid
		=
		#{dt_tid}
	</select>

	<select id="getProgramMember" resultType="member">
		select
		ps_code,m_id,m_name,m_phone,to_char(m_birth,'YYYY.MM.DD') as m_birth
		from ps left join m
		on m_id=ps_mid where ps_adcode = #{code}
	</select>

	<insert id="programCheckInsert" parameterType="String">
		insert into daily
		values(DA_SEQ.nextval,#{code},'이용중')
	</insert>
	<select id="programCheckSelect" resultType="String"
		parameterType="String">
		select da_code from daily da_pscode = #{code}
	</select>
	<insert id="programcheckInsert2" parameterType="String">
		insert into
		dailycheckn values(#{da_code},to_char(sysdate,'YYYYMMDD'))
	</insert>
	<!-- <insert id="memberInsert" parameterType="member"> INSERT INTO M VALUES(#{m_id},#{m_pwd},#{m_name},#{m_birth},#{m_addr},#{m_phone},DEFAULT) 
		</insert> <select id="getSecurityPwd" parameterType="String" resultType="String"> 
		SELECT M_PWD FROM M WHERE M_ID = #{m_id} </select> <select id="getMemberInfo" 
		parameterType="String" resultType="member"> SELECT * FROM MINFO WHERE M_ID 
		= #{m_id} </select> <select id="mybatisTest" resultType="member"> SELECT 
		* FROM MINFO <if test="point != null"> WHERE ${cName} = #{point} </if> </select> -->
</mapper>